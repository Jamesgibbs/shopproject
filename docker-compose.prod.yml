services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache

    networks:
      - laravel-network
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 512M

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./:/var/www
      - ./app.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel-network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: laravel-db
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:alpine
    container_name: laravel-redis
    restart: unless-stopped
    networks:
      - laravel-network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

networks:
  laravel-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
